# HTTP Server
server:  
  port: 4444   # HTTP port

spring:  
  application:    
    name: kafka
  profiles:
    active: local    
    
logging:
  file: logs/${spring.application.name}.log
  pattern:
    console: "%d %-5level %logger{5} %M : %msg%n"
    file: "%d %-5level %logger{5} %M : %msg%n"
  level:
    com.netflix.discovery: 'OFF'
    org.springframework.cloud: 'INFO'
    org.springframework.web: 'INFO'
    com.docomo.fraudwall: 'INFO' 
    org.springframework.kafka: 'INFO'
          




endpoints:
  health:
    sensitive: false
  restart:
    enabled: true
  shutdown:
    enabled: true


---
spring:
  profiles: local

kafka:   
  bootstrap-servers: localhost:9092
  port: 9092
  topic: HDP_FW_TRACK        
  security: PLAINTEXT
  useKeyTab: false
  storeKey: false
  clientIdConfig: fraudwall-spring
  keyTabPlace: C:\\Docomo\\proyectos\\fraudwall\\hdp_b2bp_app.keytab
  keyTabUser: hdp_b2bp_app@AD.DOCOMODIGITAL.COM  

  
--- 
spring:
  profiles: openshift
  cloud:
    stream:
      bindings:
        output:
          producer:
            error-channel-enabled: true
      kafka:
        bindings:
          output:
            producer:
              configuration:
                max:
                  block:
                    ms: 5000
                interceptor:
                  classes: com.example.Scstgh795Application$MyInterceptor
                  
                  
kafka:   
  bootstrap-servers: 192.168.127.142:9092,192.168.127.143:9092,192.168.127.144:9092 
  port: 9092
  topic: HDP_FW_TRACK        
  security: SASL_PLAINTEXT
  useKeyTab: true
  storeKey: false
  clientIdConfig: test
  keyTabPlace: /app/hdp_b2bp_app.keytab
  keyTabUser: hdp_b2bp_app@AD.DOCOMODIGITAL.COM

  
---
spring:
  profiles: docker

kafka:   
  bootstrap-servers: kafka:9092 
  port: 9092
  topic: HDP_FW_TRACK        
  security: PLAINTEXT
  useKeyTab: false
  storeKey: false
  clientIdConfig: test